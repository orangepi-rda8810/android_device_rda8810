on early-init
    # Set init and its forked children's oom_adj.
    write /proc/1/oom_adj -16

    start ueventd

# create mountpoints
    mkdir /mnt 0775 root system
    mkdir /mnt/sdcard 0000 system system
    mkdir /vendor 0770 system system

on init

sysclktz 0

loglevel 7

# setup the global environment
    export PATH /sbin:/system/bin
    export LD_LIBRARY_PATH /system/lib
    export ANDROID_BOOTLOGO 1
    export ANDROID_ROOT /system
    export ANDROID_DATA /data
    export EXTERNAL_STORAGE /mnt/sdcard
    export LOOP_MOUNTPOINT /mnt/obb

# Backwards Compat - XXX: Going away in G*
    symlink /mnt/sdcard /sdcard

    mkdir /system
    mkdir /data 0771 system system
    mkdir /config 0500 root root


    # Filesystem image public mount points.
    mkdir /mnt/obb 0700 root system
    mount tmpfs tmpfs /mnt/obb mode=0755,gid=1000

    write /proc/sys/kernel/panic_on_oops 1
    write /proc/sys/kernel/hung_task_timeout_secs 0
    write /proc/cpu/alignment 4
    write /proc/sys/kernel/sched_latency_ns 10000000
    write /proc/sys/kernel/sched_wakeup_granularity_ns 2000000
    write /proc/sys/kernel/sched_compat_yield 1
    write /proc/sys/kernel/sched_child_runs_first 0

on fs
# mount mtd partitions
    # Mount /system rw first to give the filesystem a chance to save a checkpoint
    write /proc/bootprof "INIT:NAND:Mount_START"
    mount ubifs ubi@vendor /vendor ro
    mount ubifs ubi@userdata /data nosuid nodev
#    mount ubifs ubi@cache /cache nosuid nodev
    write /proc/bootprof "INIT:NAND:Mount_END"

on link_cache_partition
    mkdir /cache 0770 system cache
    mount ubifs ubi@cache /cache nosuid nodev

on slink_cache_partition
    mkdir  /data/.cachelink system data
    symlink /data/.cachelink  /cache

on post-fs
    # once everything is setup, no need to modify /
    mount rootfs rootfs / ro remount

    # We chown/chmod /cache again so because mount is run as root + defaults
    chown system cache /cache
    chmod 0770 /cache

    # This may have been created by the recovery system with odd permissions
    chown system cache /cache/recovery
    chmod 0770 /cache/recovery

    #change permissions on vmallocinfo so we can grab it from bugreports
    chown root log /proc/vmallocinfo
    chmod 0440 /proc/vmallocinfo

    #change permissions on kmsg & sysrq-trigger so bugreports can grab kthread stacks
    chown root system /proc/kmsg
    chmod 0440 /proc/kmsg
    chown root system /proc/sysrq-trigger
    chmod 0220 /proc/sysrq-trigger

# create basic filesystem structure
    mkdir /data/nvram 0770 root nvram
    mkdir /data/misc 01771 system misc
    mkdir /data/misc/bluetoothd 0770 bluetooth bluetooth
    mkdir /data/misc/bluetooth 0770 system system
    mkdir /data/misc/keystore 0700 keystore keystore
    mkdir /data/misc/keychain 0771 system system
    mkdir /data/misc/vpn 0770 system vpn
    mkdir /data/misc/systemkeys 0700 system system
    # give system access to wpa_supplicant.conf for backup and restore
    mkdir /data/misc/wifi 0770 wifi wifi
    chmod 0777 /data/misc/wifi/wpa_supplicant.conf
    mkdir /data/local 0771 shell shell
    mkdir /data/local/tmp 0771 shell shell
    mkdir /data/data 0771 system system
    mkdir /data/app-private 0771 system system
    mkdir /data/app 0771 system system
    mkdir /data/property 0700 root root

    # create the lost+found directories, so as to enforce our permissions
    mkdir /data/lost+found 0770
    mkdir /cache/lost+found 0770

    # double check the perms, in case lost+found already exists, and set owner
    chown root root /data/lost+found
    chmod 0770 /data/lost+found
    chown root root /cache/lost+found
    chmod 0770 /cache/lost+found

    # dhcp server
    mkdir /data/misc/dhcp 0770 dhcp dhcp
    chown dhcp dhcp /data/misc/dhcp

## Custom pos-fs area (START)
# Please add custom fs operation below
#
# Touch Panel
    chown root diag /sys/module/tpd_setting/parameters/tpd_calmat
    chown root diag /sys/module/tpd_setting/parameters/tpd_em_debounce_time
    chown root diag /sys/module/tpd_debug/parameters/tpd_em_log
    chown root diag /sys/module/tpd_debug/parameters/tpd_em_log_to_fs

    # vendor driver
    insmod /vendor/driver/rda_ts.ko
    insmod /vendor/driver/rda_gs.ko
    insmod /vendor/driver/rda_ls.ko
    insmod /vendor/driver/rda_headset.ko
    insmod /vendor/driver/rda_cam_sensor.ko

    chmod 0777 /dev/pmem_multimedia


    # RTC
    mkdir /data/misc/rtc 0777 system system

## Custom pos_fs area (END)

on boot

# basic network init
    ifup lo
    hostname localhost
    domainname localdomain

# Start default class, this line is very important!!
   class_start default
   start console
   start adbd

## Daemon processes to be run by init.
##
service ueventd /sbin/ueventd
    class core
    critical

service console /system/bin/sh
    class core
    console
    disabled
    user root
    group log

# adbd is controlled via property triggers in init.<platform>.usb.rc
service adbd /sbin/adbd
    class core
    disabled

service gsmMuxd /system/bin/gsmMuxd -m basic -s /dev/modem0 -l /dev/ttyMux -b 115200 -n 8 -f 2047
    oneshot

service factory /system/bin/logwrapper /system/bin/factory
    oneshot

#adb,acm
on property:sys.usb.com_config=1
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/f_acm/instances 1
    write /sys/class/android_usb/android0/idVendor 18d1
    write /sys/class/android_usb/android0/idProduct 5d30
    write /sys/class/android_usb/android0/functions adb,acm
    write /sys/class/android_usb/android0/enable 1
